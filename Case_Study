Created a dataset with approx 1200 records in MY SQL WOrkbench. Attaching data set along with output for each question. Please refer below solution for detailed response on each query along with attached output results

1.a Write a query to find the first merchant a user transacts on

Solution:-
To get the merchant_id for the very first transaction for each user, data is grouped by User ID and then filtered with help of minimum payment date/ transaction date. Please refer below SQL query and attached output for result.

Query:-
select user_id,merchant_id,min(payment_date) from sakila.test_data group by user_id;


1.b Extract count of users who transacted for the first time on a Monday for each merchant

Solution:-
Identify Merchant ID and User ID with day as monday for min payment date. Using Group By (On Merchant ID) calculating user count for each merchant. Please refer below SQL query and attached output for result.

Query:-
select merchant_id,count(*) from (select merchant_id,user_id,payment_date,dayname(payment_date) from sakila.test_data group by merchant_id,user_id having weekday(min(Payment_DATE)) = 0) as count_User group by merchant_id;


2. Write a query to extract alternate rows ordered by date for each user  

Solution:-
Rank function is used to extract data from data set. Firstly each row is ranked according to payment date and nested this query within query to find Odd rows using reminder method. Please refer below SQL query and attached output for result.

Query:-
select user_id,merchant_id, transaction_id, amount, transaction_date from (select *, RANK() OVER (ORDER BY transaction_date ) As my_rank from sakila.test_data order by my_rank) r1 where my_rank % 2 = 1;

3 - Write a query to extract top 25% of users based on amount spent.

Solution:-
Using rank function arranged um of total amount for each user in descending order. Then extracted top 25% records from output dataset from subquery. Please refer below SQL query and attached output for result.

Query:-
select user_id, tot_amt from (select user_id, sum(amount) tot_amt, rank()over(order by sum(amount) desc) amt_rnk1 from sakila.test_data group by user_id ) t1 where t1.amt_rnk1 <= (select count(distinct user_id) * 0.25 from sakila.test_data);

4 Write a query to calculate time difference (in days) between current and previous order of each customer for every row and the avg time difference between two orders for every customer.

Solution:-
Using Left join on User ID and Txn ID from left table > txn id from right table. Extracted data set is grouped by txn ID then caclulated min day diffrence using datediff function. Please refer below SQL query and attached output for result.

Query:-
select a.*,min(datediff(a.payment_date, b.payment_date)) from sakila.test_data a left join sakila.test_data b ON a.user_id=b.user_id 
and a.txn_id>b.txn_id group by a.txn_id;
